/*!
 * ar-easy-validator v2.0.0
 * (c) 2020-2021 Armouy
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Validator=t()}(this,(function(){"use strict";const e={is_email:/^[a-z0-9]+([._\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/,is_phone:/^1[3456789][0-9]{9}$/,is_name:/^[\u4E00-\u9FA5]{2,4}$/,is_number:/^[0-9]+$/,is_code:/^[0-9]{6}$/,is_banckcard:/^[0-9]{16,19}$/,is_age:/^(?:[1-9][0-9]?|1[01][0-9]|120)$/,is_money:/((^[1-9]\d*)|^0)(\.\d{0,2}){0,1}$/,is_moneyNotLimt:/((^[1-9]\d*)|^0)(\.\d*){0,1}$/,is_chinese:/^[\u4E00-\u9FA5]+$/,is_english:/^[A-Za-z]+$/,is_url:/[a-zA-z]+:\/\/[^\s]/,is_fax:/^(([0\+]\d{2,3}-)?(0\d{2,3})-)(\d{7,8})(-(\d{3,}))?$/,is_ip:/^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])((\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])){3}|(\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])){5})$/},t=e=>e instanceof Object&&0===Object.keys(e).length||("number"!=typeof e||0!==e)&&!e,i=e=>!t(e);var s={isRequired:i,isEmpty:t,isEmail:t=>e.is_email.test(t),isPhone:t=>e.is_phone.test(t),isName:t=>e.is_name.test(t),isNumber:t=>e.is_number.test(t),isCode:t=>e.is_code.test(t),isBanckcard:t=>e.is_banckcard.test(t),isAge:t=>e.is_age.test(t),isMoney:t=>e.is_money.test(t),isMoneyNotLimt:t=>e.is_moneyNotLimt.test(t),isChinese:t=>e.is_chinese.test(t),isEnglish:t=>i(t)&&e.is_english.test(t),isUrl:t=>e.is_url.test(t),isFax:t=>e.is_fax.test(t),isIp:t=>e.is_ip.test(t),isIdcard:e=>{let t=!0;if(e&&/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|[xX])$/.test(e)){if({11:"北京",12:"天津",13:"河北",14:"山西",15:"内蒙古",21:"辽宁",22:"吉林",23:"黑龙江 ",31:"上海",32:"江苏",33:"浙江",34:"安徽",35:"福建",36:"江西",37:"山东",41:"河南",42:"湖北 ",43:"湖南",44:"广东",45:"广西",46:"海南",50:"重庆",51:"四川",52:"贵州",53:"云南",54:"西藏 ",61:"陕西",62:"甘肃",63:"青海",64:"宁夏",65:"新疆",71:"台湾",81:"香港",82:"澳门",91:"国外 "}[e.substr(0,2)]){if(18==e.length){e=e.split("");let i=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2],s=[1,0,"X",9,8,7,6,5,4,3,2],r=0,n=0,o=0;for(let t=0;t<17;t++)n=Number(e[t]),o=i[t],r+=n*o;s[r%11]!=e[17].toUpperCase()&&(t=!1)}return null!=e&&t}return!1}return!1},isWx:e=>!t(e)&&(/^1[3456789][0-9]{9}$/.test(e)||/^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$/.test(e))};const r=[">",">=","==","<","<=","!=","!=="];function n(){const e=this;Object.keys(s).forEach((t=>{e[t]=s[t]}))}n.prototype.addRule=(e,t)=>{"string"!=typeof e||e in s||"addRule"===e||"function"==typeof t&&(n.prototype[e]=t)},n.prototype.validate=(e,t)=>{if(!(e instanceof Object&&t instanceof Object))return!1;if(!s.isEmpty(t)&&s.isEmpty(e))return!1;const i=a(t);for(let t=0;t<i.length;t++){const s=i[t];if(s.field in e){let t;const i=e[s.field],{field:r,rule:n,need:a,tip:d}=s;if(a){if(!c(a))return!1;const s=u(a);let f=!0;for(let t=0;t<s.length;t++){const i=s[t];if(!i.field)throw new Error("The lack of field in need 's rule");const r=e[i.field],n=i.rule;if(f=l(r,n),!f)break}if(!f)continue;if(t=l(i,n,d),!t)return o(t,r,d)}else if(t=l(i,n,d),!t)return o(t,r,d)}}return o(!0)};const o=(e,t,i=`${t} is error`)=>{if(e)return{res:!0,msg:"success"};return{res:!1,msg:i||`${t} is error`}},a=e=>{const t=Object.keys(e).map((t=>{let i=JSON.parse(JSON.stringify(e[t]));if(i&&i instanceof Object&&s.isEmpty(i.rule))i.rule="isRequired";else if("string"==typeof i)throw new Error("rule is invalid");return"field"in i||(i.field=t),i}));return JSON.parse(JSON.stringify(t))},u=e=>e.map((e=>{const t=e.rule;s.isEmpty(t)&&(e.rule="isRequired");for(let i=0;i<t.length;i++)"string"!=typeof t[i]||t[i]in s||(e.rule[i]="isRequired");return e})),l=(e,t,i=!0)=>{let s="";if("string"==typeof t)s="string";else if(i&&Array.isArray(t))s="array";else{if("[object Object]"!=Object.prototype.toString.call(t))return!1;s="object"}let r=!1;switch(s){case"object":r=f(e,t);break;case"array":r=p(e,t);break;default:r=d(e,t)}return r},c=e=>!(!Array.isArray(e)||Array.isArray(e)&&0===e.length),d=(e,t)=>{if(!(t in s)&&!(t in n.prototype))return!1;let i=!0;return"isRequired"!==t&&(i=s.isRequired(e)),t in s?i&&s[t](e):i&&n.prototype[t](e)},f=(e,t)=>{const i=Object.keys(t)[0];if(!(r.includes(i)>-1))return!1;const s=t[i];switch(i){case">":return+e>+s;case">=":return+e>=+s;case"==":return e==s;case"===":return e===s;case"<":return+e<+s;case"<=":return+e<=+s;case"!=":return e!=s;case"!==":return e!==s;default:return!1}},p=(e,t)=>{for(let i=0;i<t.length;i++){const s=t[i];if(!l(e,s,!1))return!1}return!0};return n}));
